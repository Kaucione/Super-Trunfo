#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_DE_CARTAS 36
#define CARTAS_POR_JOGADOR 19

// Estrutura para armazenar os atributos da carta
typedef struct {
    char continente[5];
    char Pais[36];
    char estado[36];
    char nome_cidade[36];
    int cod_carta;
    int populacao;
    double area;
    double PIB;
    int pontos_turisticos;
    double densidade_populacional;
    double PIB_per_capita;
    double super_poder;
} Carta; 

// Funções
void distribuir_cartas(Carta baralho[], Carta jogador[], Carta computador[], int total_cartas);
void jogar(Carta jogador[], Carta computador[]);

int main() {
    Carta cidades[MAX_DE_CARTAS]; // Array para armazenar até 36 cartas
    int num_cartas, opcao;

    // Cabeçalho
    printf("*************************\n");
    printf("  Bem-vindo ao Super Trunfo\n");
    printf("*************************\n");

    // O usuário deve escolher de 1 a 36 cartas para cadastrar
    printf("Quantas cartas deseja cadastrar (máximo %d)? ", MAX_DE_CARTAS);
    scanf("%d", &num_cartas);

    // Validação do número de cartas
    if (num_cartas > MAX_DE_CARTAS || num_cartas <= 0) {
        printf("Número inválido de cartas!\n");
        return 1;
    }

    // Cadastro das cartas
    for (int i = 0; i < num_cartas; i++) {
        printf("\nCadastro da Carta %d\n", i + 1);

        printf("Insira o código da carta:\n ");
        scanf("%d", &cidades[i].cod_carta);

        printf("Insira o nome da Continente:\n ");
        scanf(" %[^\n]", &cidades[i].continente);

        printf("Insira o País:\n ");
        scanf(" %[^\n]", &cidades[i].Pais);
        
        printf("Insira o estado:\n ");
        scanf(" %[^\n]", &cidades[i].estado);
        
        printf("Insira o cidade:\n ");
        scanf(" %[^\n]", &cidades[i].nome_cidade);

        printf("Insira a população:\n ");
        scanf("%d", &cidades[i].populacao);

        printf("Insira a área (km²):\n");
        scanf("%lf", &cidades[i].area);

        printf("Insira o PIB (em bilhões):\n ");
        scanf("%lf", &cidades[i].PIB);

        printf("Insira o número de pontos turísticos:\n ");
        scanf("%d", &cidades[i].pontos_turisticos);

        // Cálculo de densidade populacional e PIB per capita
        cidades[i].densidade_populacional = cidades[i].populacao / cidades[i].area;
        cidades[i].PIB_per_capita = cidades[i].PIB / cidades[i].populacao;
        cidades[i].super_poder = cidades[i].PIB_per_capita * cidades[i].pontos_turisticos;
    }

    // Exibição das cartas cadastradas
    printf("\nCartas cadastradas:\n");
    for (int i = 0; i < num_cartas; i++) {
        printf("\n-----------------------------\n");
        printf("Código: %d\n", cidades[i].cod_carta);
        printf("Cidade: %s\n", cidades[i].nome_cidade);
        printf("Continente: %s\n", cidades[i].continente);
        printf("Estado: %s\n", cidades[i].estado);
        printf("População: %d habitantes\n", cidades[i].populacao);
        printf("Área: %f km²\n", cidades[i].area);
        printf("PIB: %f bilhões\n", cidades[i].PIB);
        printf("Pontos turísticos: %d\n", cidades[i].pontos_turisticos);
        printf("Densidade Populacional: %f hab/km²\n", cidades[i].densidade_populacional);
        printf("PIB per capita: %f\n", cidades[i].PIB_per_capita);
        printf("Super Poder: %f\n", cidades[i].super_poder);
        printf("-----------------------------\n");
    }

    // Iniciar o jogo
    printf("Vamos jogar?\n");
    printf("(1) Sim ou (2) Não\n");
    scanf("%d", &opcao);
    
    if (opcao == 1) {
        printf("Iniciando o Jogo...\n");
    } else {
        printf("Cadastro feito com sucesso!\n");
        return 0;
    }

void distribuir_cartas(Carta baralho[], Carta jogador[], Carta computador[], int total_cartas) {
    int usadas[MAX_DE_CARTAS] = {0};
    srand(time(0));

    for (int i = 0; i < CARTAS_POR_JOGADOR; i++) {
        int indice;
        do {
            indice = rand() % total_cartas;
        } while (usadas[indice]);
        
        jogador[i] = baralho[indice];
        usadas[indice] = 1;
    }

    for (int i = 0; i < CARTAS_POR_JOGADOR; i++) {
        int indice;
        do {
            indice = rand() % total_cartas;
        } while (usadas[indice]);
        
        computador[i] = baralho[indice];
        usadas[indice] = 1;
    }
}

void jogar(Carta jogador[], Carta computador[]) {
    int pontos_jogador = 0, pontos_computador = 0;

    for (int i = 0; i < CARTAS_POR_JOGADOR; i++) {
        printf("\nRodada %d:\n", i + 1);
        printf("Sua carta: %s (Super Poder: %.2lf)\n", jogador[i].nome_cidade, jogador[i].super_poder);
        printf("Carta do computador: %s (Super Poder: %.2lf)\n", computador[i].nome_cidade, computador[i].super_poder);
        
        if (jogador[i].super_poder > computador[i].super_poder) {
            printf("Você venceu esta rodada!\n");
            pontos_jogador++;
        } else if (jogador[i].super_poder < computador[i].super_poder) {
            printf("O computador venceu esta rodada!\n");
            pontos_computador++;
        } else {
            printf("Empate!\n");
        }
    }
return 0;
}
